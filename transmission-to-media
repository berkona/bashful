#!/usr/bin/env bash

# Set to what directory you want to temporarily keep files
TEMP_DIR="/mnt/tmp"
LOG_FILE="$TEMP_DIR/postprocessing.log"

# Set up for SickBeard & CouchPotato
SB_HOST="localhost"
SB_PORT="8081"
SB_USER=""
SB_PASS=""

CP_HOST="localhost"
CP_PORT="5050"
CP_KEY=""

# Auto decompress rar files, 1 enables, 0 disables
# You must have unrar installed to use this feature.
ENABLE_DECOMPRESS=1

# Change this if unrar isn't on the PATH variable
UNRAR_CMD=`which unrar`

# One of "hard", "soft", and "copy"
DOOP_STYLE="copy"

SB_CATEGORY="tv-shows"
CP_CATEGORY="movies"

RAR_REGEX=".*\.(rar|1|01|001)"
RAR_PARTIAL=".*\.(r[0-9]+|[0-9]+)"

function decompress_file() {
    echo "Decompressing file '$1'."
    $UNRAR_CMD x -o+ -y -ad -idp "$1" >> "$TEMP_DIR/unrar.log" &
}

function doop_file() {
    echo "Duplicating file '$1'."
    if [ "$DOOP_STYLE" = "hard" ]; then
        ln "$1" "$OUTPUT_DIR"
        retval=$?
    elif [ "$DOOP_STYLE" = "soft" ]; then
        ln -s "$1" "$OUTPUT_DIR"
        retval=$?
    else
        cp "$1" "$OUTPUT_DIR" &
        retval=0
    fi

    if [ $retval -ne 0 ]; then
        echo "$DOOP_STYLE failed.  Retrying with default (copy)."
        cp "$1" "$OUTPUT_DIR" &
    fi
}

function process_files() {
    if [ $ENABLE_DECOMPRESS -eq 1 ]; then
        echo "Auto-decompressing files under the torrent. Check '$TEMP_DIR/unrar.log' for details."
        find -E "$REAL_ROOT" -type f -regex $RAR_REGEX | while read f; do decompress_file "$f"; done
        find -E "$REAL_ROOT" -type f ! \( -regex $RAR_REGEX  -o -regex $RAR_PARTIAL \) | while read f; do doop_file "$f"; done
    else
        echo "Finding files under torrent name."
        find "$REAL_ROOT" -type f | while read f; do doop_file "$f"; done
    fi
}

function delete_dir() {
    echo "Deleting empty directory '$1'"
    rmdir "$1"
}

function main() {
    echo "====== Starting Transmission To Media ======"
    echo "Torrent directory: '$TR_TORRENT_DIR'."
    echo "Torrent name: '$TR_TORRENT_NAME'."

    REAL_ROOT="$TR_TORRENT_DIR/$TR_TORRENT_NAME"
    echo "Real file: '$REAL_ROOT'."

    CATEGORY="other"
    OIFS=$IFS
    IFS='/'
    for dir in $TR_TORRENT_DIR
    do
        if [ "$dir" = "$SB_CATEGORY" ]
        then
                CATEGORY=$SB_CATEGORY
        elif [ "$dir" = "$CP_CATEGORY" ]
        then
                CATEGORY=$CP_CATEGORY
        fi
    done
    IFS=$OIFS
    echo "Category is '$CATEGORY'."

    CATEGORY_DIR="$TEMP_DIR/$CATEGORY"

    builtin cd $TR_TORRENT_DIR
    if [[ ! -f $TR_TORRENT_NAME ]]
    then
        echo "Torrent is directory, creating sub-folder."
        OUTPUT_DIR="$CATEGORY_DIR/$TR_TORRENT_NAME"
    else
        OUTPUT_DIR="$CATEGORY_DIR"
    fi

    mkdir -p "$OUTPUT_DIR"
    builtin cd "$OUTPUT_DIR"

    # Process files into temp directory
    process_files

    # Send update to either SB or CP
    if [ "$CATEGORY" = "$SB_CATEGORY" ]
    then
        echo "Notifying SickBeard."
        SB_URL="http://$SB_HOST:$SB_PORT/home/postprocess/processEpisode"
        SB_DATA="dir=`urlencode $OUTPUT_DIR`"
        WGET_FLAGS="--post-data=$SB_DATA $SB_URL -O /dev/null"
        wget --user=$SB_USER --password=$SB_PASS $WGET_FLAGS >> /dev/null 2>&1 &
    elif [ "$CATEGORY" = "$CP_CATEGORY" ]
    then
        echo "Notifying CouchPotato."
        CP_URL="http://$CP_HOST:$CP_PORT/api/$CP_KEY"
        CP_CMD="renamer.scan/?movie_folder=$OUTPUT_DIR"
        wget "$CP_URL/$CP_CMD" -O /dev/null >> /dev/null 2>&1 &
    fi

    echo "Deleting empty directories"
    find "$TEMP_DIR" -mindepth 2 -depth -type d -empty | while read dir; do delete_dir "$dir"; done
}

mkdir -p "$TEMP_DIR"
touch "$LOG_FILE"
main >> "$LOG_FILE" 2>&1
